# Project Development Environment
# Automatically loads when entering the directory (requires direnv)

# Set project environment variables
export PROJECT_NAME="vector-query-client"
export PROJECT_MODE="development"
export ENV="development"
export SERVICE="vector-query-client"
export AI_SAFETY_MODE="enforced"
export LOG_LEVEL="info"
export LOG_JSON="false"
export LOG_TIMESTAMP="true"
export LOG_CALLER="false"

# Module-specific configuration for vector-query-client
export GOOGLE_CLOUD_PROJECT="${GOOGLE_CLOUD_PROJECT:-your-project-id}"
export GOOGLE_APPLICATION_CREDENTIALS="${GOOGLE_APPLICATION_CREDENTIALS:-}"
export VERTEX_AI_REGION="us-central1"
export VECTOR_INDEX_ENDPOINT_ID="${VECTOR_INDEX_ENDPOINT_ID:-}"
export VECTOR_DEPLOYED_INDEX_ID="nq_vector_search_deployed"
export VECTOR_QUERY_TOP_K="10"
export VECTOR_QUERY_TIMEOUT="5.0"  # seconds
export VECTOR_QUERY_MAX_RETRIES="3"
export VECTOR_QUERY_P95_TARGET_MS="120"  # Performance target
export EMBEDDING_MODEL="text-embedding-004"
export EMBEDDING_DIMENSIONS="768"

# File limits
export AI_MAX_FILES="60"
export MAX_PROJECT_FILES="1000"

# Development tool versions
export PYTHON_VERSION="3.13"

# Project paths
export PROJECT_ROOT="$(pwd)"

# Auto-detect project type
if [[ -f "pyproject.toml" ]] && [[ -d "src" ]]; then
  export PROJECT_TYPE="python-package"
  export SRC_DIR="${PROJECT_ROOT}/src"
  export DIST_DIR="${PROJECT_ROOT}/dist"
  echo "📦 Detected: Python Package Project"
fi

# Tool configuration
export COVERAGE_FILE="${PROJECT_ROOT}/.coverage"

# AI Safety reminders
echo "🔒 AI Safety: Max ${AI_MAX_FILES} files per component"

# Count files
if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  committed_files=$(git ls-files --cached | wc -l | tr -d ' ')
  untracked_files=$(git ls-files --others --exclude-standard | { grep -v -E '^(tmp|pytest-)' || true; } | wc -l | tr -d ' ')
  file_count=$((committed_files + untracked_files))
  echo "📁 vector-query-client file count: ${file_count}"
fi

# Activate Poetry virtual environment
if [[ -d ".venv" ]]; then
    export VIRTUAL_ENV="${PROJECT_ROOT}/.venv"
    export PATH="${VIRTUAL_ENV}/bin:$PATH"
    export VIRTUAL_ENV_PROMPT="(vector-query-client) "
    echo "🐍 Python virtual environment activated"
fi

# Load local overrides
if [[ -f ".envrc.local" ]]; then
  source_env .envrc.local
fi

echo "✅ Environment configured for vector-query-client"
echo "🎯 Performance Target: <${VECTOR_QUERY_P95_TARGET_MS}ms p95 latency"
