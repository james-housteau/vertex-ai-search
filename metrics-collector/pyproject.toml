[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "metrics-collector"
version = "0.1.0"
description = "Performance metrics collection and analysis for Vertex AI search operations"
authors = ["Genesis Framework"]
readme = "README.md"
packages = [{include = "metrics_collector", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.7"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
black = "^24.8.0"
isort = "^5.13.2"
mypy = "^1.11.2"
ruff = "^0.6.4"

[tool.poetry.scripts]
metrics-collector = "metrics_collector.main:main"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
strict = true
disallow_untyped_defs = true
warn_return_any = true
warn_unused_configs = true
show_error_codes = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = ["S101", "PLR0913", "COM812", "ISC001"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["PLR2004"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --cov=src/metrics_collector --cov-report=html --cov-report=term-missing --cov-fail-under=80"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src/metrics_collector"]
omit = ["tests/*", "src/metrics_collector/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]
